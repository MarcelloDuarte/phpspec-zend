
use PHPSpec\Context\Zend\Spy\View as SpyView;
use PHPSpec\Context\Zend\Spy\Observer;
use PHPSpec\Context\Zend\Spy\Subject;

class {spyController} extends {userController} implements Subject
{
    protected $observers = array();
    
    public function __construct(Zend_Controller_Request_Abstract $request, Zend_Controller_Response_Abstract $response, array $invokeArgs = array())
    {
        parent::__construct($request, $response, $invokeArgs);
        $this->view = new SpyView;
        $this->_helper->viewRenderer->setNoRender(true);
    }
    
    public function attach(Observer $observer)
    {
        $this->observers[] = $observer;
        $this->view->attach($observer);
    }
    
    public function render($action = null, $name = null, $noController = false)
    {
        $spyData = array(
            'method' => 'render',
            'action' => $action,
            'name' => $name,
            'noController' => $noController
        );
        $this->notify($spyData);
    }
    
    public function renderScript($script, $name = null)
    {
        $spyData = array(
            'method' => 'renderScript',
            'script' => $script,
            'name' => $name
        );
        $this->notify($spyData);
    }
    
    public function notify($spyData)
    {
        foreach($this->observers as $observer) {
            $observer->update($spyData);
        }
    }
}